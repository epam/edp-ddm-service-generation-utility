/*
 * Copyright 2022 EPAM Systems.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.epam.digital.data.platform.generator.factory.impl;

import com.epam.digital.data.platform.generator.factory.MultiAbstractScope;
import com.epam.digital.data.platform.generator.metadata.AutoGeneratedValueProvider;
import com.epam.digital.data.platform.generator.model.Context;
import com.epam.digital.data.platform.generator.scope.SequenceDataProviderScope;
import org.springframework.stereotype.Component;
import schemacrawler.schema.Table;

@Component
public class KafkaApiSequenceDataProviderScopeFactory extends
    MultiAbstractScope<SequenceDataProviderScope> {

  private final AutoGeneratedValueProvider autoGeneratedValueProvider;

  public KafkaApiSequenceDataProviderScopeFactory(AutoGeneratedValueProvider autoGeneratedValueProvider) {
    this.autoGeneratedValueProvider = autoGeneratedValueProvider;
  }
  
  @Override
  protected SequenceDataProviderScope map(Table table, Context context) {
    var scope = new SequenceDataProviderScope();
    scope.setClassName(getSchemaName(table) + "SequenceDataProvider");
    scope.setAutoGeneratedValues(autoGeneratedValueProvider.findFor(getCutTableName(table)));
    return scope;
  }

  @Override
  protected boolean isApplicable(Table table, Context context) {
    return isRecentDataTable(table) && 
        autoGeneratedValueProvider.getTablesWithAutoGeneratedValues().contains(getCutTableName(table));
  }

  @Override
  public String getPath() {
    return "kafka-api/src/main/java/kafkaapi/sequencedata/sequenceDataProvider.java.ftl";
  }
}
