package com.epam.digital.data.platform.generator.factory.impl;

import static com.epam.digital.data.platform.generator.utils.ContextTestUtils.getContext;
import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.when;

import com.epam.digital.data.platform.generator.metadata.AutoGeneratedValue;
import com.epam.digital.data.platform.generator.metadata.AutoGeneratedValueProvider;
import com.epam.digital.data.platform.generator.model.Context;
import java.util.List;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

@ExtendWith(MockitoExtension.class)
class CreateCommandHandlerScopeFactoryTest {

  private final Context context = getContext();

  private CreateCommandHandlerScopeFactory instance;

  @Mock
  AutoGeneratedValueProvider provider;

  @BeforeEach
  void beforeEach() {
    instance = new CreateCommandHandlerScopeFactory(provider);
  }

  @Test
  void expectedValidScopeCreated() {
    when(provider.findFor("test_schema"))
        .thenReturn(List.of(new AutoGeneratedValue("test_schema", "test_column",
            "АА/{dd-MM-yyyy/HH:mm:ss}/{SEQ}")));
    var scopeList = instance.create(context);

    assertThat(scopeList).hasSize(1);

    var scope = scopeList.get(0);
    assertThat(scope.getSchemaName()).isEqualTo("TestSchemaModel");
    assertThat(scope.getClassName()).isEqualTo("TestSchemaCreateCommandHandler");
    assertThat(scope.getOperation()).isEqualTo("create");
    assertThat(scope.getSequenceProviderName()).isEqualTo("TestSchemaSequenceDataProvider");
    assertThat(scope.getTableDataProviderName()).isEqualTo("TestSchemaTableDataProvider");

    assertThat(scope.getAutoGeneratedValueFields()).hasSize(1);
    assertThat(scope.getAutoGeneratedValueFields().get(0).getName()).isEqualTo("testColumn");
    assertThat(scope.getAutoGeneratedValueFields().get(0).getColumnName()).isEqualTo("test_column");
    assertThat(scope.getAutoGeneratedValueFields().get(0).getPattern())
        .isEqualTo("АА/{dd-MM-yyyy/HH:mm:ss}/{SEQ}");
  }
}